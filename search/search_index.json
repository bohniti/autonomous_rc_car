{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"IT - Projekt von Timo, Janni & Tim RC Car - Autonomes fahren mittels neuronaler Netze Idee Unser Ziel ist es ein Spielzeugauto so umzubauen und zu programmieren, dass es eine vorgefertigte Strecke selbst\u00e4ndig fahren kann. Die Fahrbahn soll mit Klebeband auf den Boden beliebig aufgeklebt werden k\u00f6nnen. Das Auto lernt mit und soll seine Rundenzeit nach und nach verbessern. Vorgehensweise Wir verwenden ein RaspberryPI und ein neuronales Netz mit einem Deeplearning-Verfahren, damit die Software lernt innerhalb der Strecke zu fahren und vermeintlichen Hinternissen ausweicht. Es soll die Rundenzeit aufzeichnen und durch kluges Verhalten erkennen, ob es sich links, rechts oder geradeaus halten muss, damit die Rundenzeit besser wird. L\u00f6sungsansatz Das neuronale Netz wollen wir mit Python programmieren. F\u00fcr das Deeplearning ist eine Technologie wie Keras gut geeignet. Wir bauen das Auto so um, dass es mithilfe einer Erweiterung der Raspberry PI-\u201eServolenkung\u201c automatisch beschleunigt bzw. gebremst werden kann. Das Angebot der Fakult\u00e4t, uns finanziell zu unterst\u00fctzen nehmen wir dankbar an, wenn Sie sich f\u00fcr unser Projekt entscheiden. Wir rechnen mit einem Materialaufwand von ungef\u00e4hr 150 Euro. Motivation Wir drei sind uns einig, dass es keine leichte Aufgabe wird dieses Projekt umzusetzen. Dennoch sind wir \u00fcberzeugt, dass wir die wir die n\u00f6tigen Vorraussetzungen mitbringen, welche ein erfolgreichem Abschluss erfordert. Wir sind organisiert, haben den n\u00f6tigen technischen Background und brennen darauf mehr zu erfahren und zu lernen. Alle im Team sind begeistert von der Idee. Selbstverst\u00e4ndlich sind wir offen f\u00fcr Ihre Vorschl\u00e4ge und m\u00f6glichen Fragen.","title":"IT - Projekt von Timo, Janni & Tim"},{"location":"#it-projekt-von-timo-janni-tim","text":"","title":"IT - Projekt von Timo, Janni &amp; Tim"},{"location":"#rc-car-autonomes-fahren-mittels-neuronaler-netze","text":"","title":"RC Car - Autonomes fahren mittels neuronaler Netze"},{"location":"#idee","text":"Unser Ziel ist es ein Spielzeugauto so umzubauen und zu programmieren, dass es eine vorgefertigte Strecke selbst\u00e4ndig fahren kann. Die Fahrbahn soll mit Klebeband auf den Boden beliebig aufgeklebt werden k\u00f6nnen. Das Auto lernt mit und soll seine Rundenzeit nach und nach verbessern.","title":"Idee"},{"location":"#vorgehensweise","text":"Wir verwenden ein RaspberryPI und ein neuronales Netz mit einem Deeplearning-Verfahren, damit die Software lernt innerhalb der Strecke zu fahren und vermeintlichen Hinternissen ausweicht. Es soll die Rundenzeit aufzeichnen und durch kluges Verhalten erkennen, ob es sich links, rechts oder geradeaus halten muss, damit die Rundenzeit besser wird.","title":"Vorgehensweise"},{"location":"#losungsansatz","text":"Das neuronale Netz wollen wir mit Python programmieren. F\u00fcr das Deeplearning ist eine Technologie wie Keras gut geeignet. Wir bauen das Auto so um, dass es mithilfe einer Erweiterung der Raspberry PI-\u201eServolenkung\u201c automatisch beschleunigt bzw. gebremst werden kann. Das Angebot der Fakult\u00e4t, uns finanziell zu unterst\u00fctzen nehmen wir dankbar an, wenn Sie sich f\u00fcr unser Projekt entscheiden. Wir rechnen mit einem Materialaufwand von ungef\u00e4hr 150 Euro.","title":"L\u00f6sungsansatz"},{"location":"#motivation","text":"Wir drei sind uns einig, dass es keine leichte Aufgabe wird dieses Projekt umzusetzen. Dennoch sind wir \u00fcberzeugt, dass wir die wir die n\u00f6tigen Vorraussetzungen mitbringen, welche ein erfolgreichem Abschluss erfordert. Wir sind organisiert, haben den n\u00f6tigen technischen Background und brennen darauf mehr zu erfahren und zu lernen. Alle im Team sind begeistert von der Idee. Selbstverst\u00e4ndlich sind wir offen f\u00fcr Ihre Vorschl\u00e4ge und m\u00f6glichen Fragen.","title":"Motivation"},{"location":"about/","text":"\u00dcber uns Betreuer Prof. Dr. Florian Gallwitz Mitglieder Tim L\u00f6hr Ioannis Palpanes Timo Bohnstedt","title":"Team"},{"location":"about/#uber-uns","text":"","title":"\u00dcber uns"},{"location":"about/#betreuer","text":"Prof. Dr. Florian Gallwitz","title":"Betreuer"},{"location":"about/#mitglieder","text":"Tim L\u00f6hr Ioannis Palpanes Timo Bohnstedt","title":"Mitglieder"},{"location":"getting-start/","text":"Projekt Dokumentation Installiere Python, Git und mkdocs Klone das Repository Bearbeite die Dokumentation, indem du die .md Dateien unter /docs \u00e4nderst (Text) oder die mkdocs.yml anpasst (Men\u00fc, Einstellungen). Baue die Webseite mit dem Befehl mkdocs build Push deine \u00c4nderungen in das Repository und aktuallisiere die Online-Dokumentation mit mkdocs gh-deploy Rufe die aktuelle Version der Dokumentation auf. Hilfe zur Dokumentation super einfache Anleitung und \u00dcbersicht f\u00fcr Git Markdown Syntax Noch mehr Markdown Initialisierung Fragen an die Mitglieder (DeadLine: Kick-Off am 04.04.19): Wie funktioniert ein neuronales Netz grundlegend? Welche Arten von neuronalen Netzen gibt es? Wodruch unterscheiden sich die neuronalen Netzte von einander? Welche Netz-Art eignet sich am besten f\u00fcr das Projekt? Was ist ein Layer, eine Epoche usw.? Welche Technologie (Netzart, API, Framework) wird von DonkeyCar verwendet? Kick-Off (04.04.19): PDF Version Wie welches Ergebnis soll erzielt werden? Bericht mit 20 Seiten (Ein gekennzeichneter Abschnitt pro Mitglied) Vortrag \u00fcber eine Stunde (Termin selbstst\u00e4ndig im WS mit Prof. Trommler vereinbaren) Wie wird die Note gebildet? Auf den jeweiligen Berichtsabschnitt (vor allem bei gro\u00dfen qualitativen Unterschieden) Vortag Gesamtprojektfortschritt Welche Anforderungen gibt es, neben den erwarteten Ergebnissen? Hard- und Software bis zum Wintersemester fertig, Bericht bis zum Vortag fertig. Wie findet die Kommunikation statt? (fester Intervall, ...) M\u00f6gliche Sprechstunde Donnerstag um 08:45 Welche Meilensteine sollen erreicht werden? Supervised learning Reinforcment learning, f\u00fcr mindestens einen Parameter Wie lange haben wir Zeit? Allgemein: 14.03.2020 Wo arbeiten wir? Medienlabor","title":"Initialisierung"},{"location":"getting-start/#projekt","text":"","title":"Projekt"},{"location":"getting-start/#dokumentation","text":"Installiere Python, Git und mkdocs Klone das Repository Bearbeite die Dokumentation, indem du die .md Dateien unter /docs \u00e4nderst (Text) oder die mkdocs.yml anpasst (Men\u00fc, Einstellungen). Baue die Webseite mit dem Befehl mkdocs build Push deine \u00c4nderungen in das Repository und aktuallisiere die Online-Dokumentation mit mkdocs gh-deploy Rufe die aktuelle Version der Dokumentation auf.","title":"Dokumentation"},{"location":"getting-start/#hilfe-zur-dokumentation","text":"super einfache Anleitung und \u00dcbersicht f\u00fcr Git Markdown Syntax Noch mehr Markdown","title":"Hilfe zur Dokumentation"},{"location":"getting-start/#initialisierung","text":"","title":"Initialisierung"},{"location":"getting-start/#fragen-an-die-mitglieder-deadline-kick-off-am-040419","text":"Wie funktioniert ein neuronales Netz grundlegend? Welche Arten von neuronalen Netzen gibt es? Wodruch unterscheiden sich die neuronalen Netzte von einander? Welche Netz-Art eignet sich am besten f\u00fcr das Projekt? Was ist ein Layer, eine Epoche usw.? Welche Technologie (Netzart, API, Framework) wird von DonkeyCar verwendet?","title":"Fragen an die Mitglieder (DeadLine: Kick-Off am 04.04.19):"},{"location":"getting-start/#kick-off-040419","text":"PDF Version Wie welches Ergebnis soll erzielt werden? Bericht mit 20 Seiten (Ein gekennzeichneter Abschnitt pro Mitglied) Vortrag \u00fcber eine Stunde (Termin selbstst\u00e4ndig im WS mit Prof. Trommler vereinbaren) Wie wird die Note gebildet? Auf den jeweiligen Berichtsabschnitt (vor allem bei gro\u00dfen qualitativen Unterschieden) Vortag Gesamtprojektfortschritt Welche Anforderungen gibt es, neben den erwarteten Ergebnissen? Hard- und Software bis zum Wintersemester fertig, Bericht bis zum Vortag fertig. Wie findet die Kommunikation statt? (fester Intervall, ...) M\u00f6gliche Sprechstunde Donnerstag um 08:45 Welche Meilensteine sollen erreicht werden? Supervised learning Reinforcment learning, f\u00fcr mindestens einen Parameter Wie lange haben wir Zeit? Allgemein: 14.03.2020 Wo arbeiten wir? Medienlabor","title":"Kick-Off (04.04.19):"},{"location":"log/","text":"Log Projekt-Thema Datum Arbeitszeit [Stunden] Initialisierung bis 18.04.2019 30 Webserver und Kameramodul 19.04.2019 6 Steuerung 20.04.2019 6 Auto Design, tiefere Planung und erste Fahrversuche 01.05.2019 7 *** Gesamt 43","title":"Log"},{"location":"log/#log","text":"Projekt-Thema Datum Arbeitszeit [Stunden] Initialisierung bis 18.04.2019 30 Webserver und Kameramodul 19.04.2019 6 Steuerung 20.04.2019 6 Auto Design, tiefere Planung und erste Fahrversuche 01.05.2019 7 *** Gesamt 43","title":"Log"},{"location":"project/","text":"Das RC Auto vorbereiten Das Ferngesteuerte Auto sollte ein 1:10 Modellauto sein. Es existieren auch Ferngesteuerte Autos im Spielzeug Segment, allerdings ist deren Motor kein Servomotor . Um ein RC Auto mit einem Raspberry Pi m\u00f6glichst einfach zu verbinden, empfiehlt sich ein Servomotor. So ein Spielzeug Auto hat 4Pins mit einem servo-\u00e4hnlichen Verhalten. Es w\u00e4re prinzipiell m\u00f6glich auch das mit einem RaspberryPI zu verbinden, allerdings ist so etwas dann eher im Elektrotechnik Fachgebiet. Der Servomotor Der Servomotor eines Modellautos hat 3 Pins. Die 3 Pins sind Versorgungspannung Masse Signal/PWM Wir haben einen SunFounder PCA9685 als 12 Bit PWM Servo Driver verwendet. Vom Raspberry Pi m\u00fcssen wir nun 4 Pins an den Servo Driver anschlie\u00dfen. Die 5V vom Pi an z.B Pin 2 muss an den VCC (+) Pol des Drivers angeschlossen werden. Dann vom Pi die Masse z.B Pin 6 muss an die Masse (GND) vom Driver angeschlossen werden. Die Daten m\u00fcssen aber auch vom Pi in den Motor flie\u00dfen. Daf\u00fcr verwenden wir einen I^2C Bus. Diesen Bus verwenden wir \u00fcber die beiden Pins SDL (Serial Data) und SCL (Serial Clock). Der SDl schickt die Daten und der SCL setzt den Taktimpuls. Der SDL hat eine 10Bit Adressierung. Sowohl der Pi als auch der Driver haben einen SDL & SCL Anschluss Pin, die haben wir nun auch verbunden. Als letzten Schritt muss der Motor noch mit dem Servotreiber verbunden werden. Ein echtes Modellauto hat immer einen wie oben beschriebenen 3 Pin Anschluss. Der Servo hat 3x16 Reihen Pins zur freien Verf\u00fcgung, die jeweils in PWM, V+ und GND (Masse) aufgeteilt sind. Der 3er Pin Block vom Motor muss nun einfach an eine dieser 16 Reihen eingesteckt werden. Soweit fertig mit dem Verbinden. Kameramodul und Webserver \u00dcber die IP-Adresse 192.168.2.125 und den Port 8887 kann ein Webinterface aufgerufen werden, \u00fcber dieses kann das Auto sp\u00e4ter bewegt werden und die Kamera eingesehen werden. Die Information (Vor, Zur\u00fcck, Links und Recht) wird mittels JSON an den Webserver der vom Pi gehostet wird geschickt. Das Pi wartet darauf Daten zu bekommen, um anschlie\u00dfend das richtige PWM Signal zu senden. Abstraktionsebenen Abstraktionsebene 1 - Grobe Gesamt\u00fcbersicht Abstraktionsebene 2 - Sicht Laptop - Webserver Abstraktionsebene 2 - Sicht RaspberryPi - Motor Abstraktionsebene 3 - Neuronales Netz","title":"Projekt"},{"location":"project/#das-rc-auto-vorbereiten","text":"Das Ferngesteuerte Auto sollte ein 1:10 Modellauto sein. Es existieren auch Ferngesteuerte Autos im Spielzeug Segment, allerdings ist deren Motor kein Servomotor . Um ein RC Auto mit einem Raspberry Pi m\u00f6glichst einfach zu verbinden, empfiehlt sich ein Servomotor. So ein Spielzeug Auto hat 4Pins mit einem servo-\u00e4hnlichen Verhalten. Es w\u00e4re prinzipiell m\u00f6glich auch das mit einem RaspberryPI zu verbinden, allerdings ist so etwas dann eher im Elektrotechnik Fachgebiet.","title":"Das RC Auto vorbereiten"},{"location":"project/#der-servomotor","text":"Der Servomotor eines Modellautos hat 3 Pins. Die 3 Pins sind Versorgungspannung Masse Signal/PWM Wir haben einen SunFounder PCA9685 als 12 Bit PWM Servo Driver verwendet. Vom Raspberry Pi m\u00fcssen wir nun 4 Pins an den Servo Driver anschlie\u00dfen. Die 5V vom Pi an z.B Pin 2 muss an den VCC (+) Pol des Drivers angeschlossen werden. Dann vom Pi die Masse z.B Pin 6 muss an die Masse (GND) vom Driver angeschlossen werden. Die Daten m\u00fcssen aber auch vom Pi in den Motor flie\u00dfen. Daf\u00fcr verwenden wir einen I^2C Bus. Diesen Bus verwenden wir \u00fcber die beiden Pins SDL (Serial Data) und SCL (Serial Clock). Der SDl schickt die Daten und der SCL setzt den Taktimpuls. Der SDL hat eine 10Bit Adressierung. Sowohl der Pi als auch der Driver haben einen SDL & SCL Anschluss Pin, die haben wir nun auch verbunden. Als letzten Schritt muss der Motor noch mit dem Servotreiber verbunden werden. Ein echtes Modellauto hat immer einen wie oben beschriebenen 3 Pin Anschluss. Der Servo hat 3x16 Reihen Pins zur freien Verf\u00fcgung, die jeweils in PWM, V+ und GND (Masse) aufgeteilt sind. Der 3er Pin Block vom Motor muss nun einfach an eine dieser 16 Reihen eingesteckt werden. Soweit fertig mit dem Verbinden.","title":"Der Servomotor"},{"location":"project/#kameramodul-und-webserver","text":"\u00dcber die IP-Adresse 192.168.2.125 und den Port 8887 kann ein Webinterface aufgerufen werden, \u00fcber dieses kann das Auto sp\u00e4ter bewegt werden und die Kamera eingesehen werden. Die Information (Vor, Zur\u00fcck, Links und Recht) wird mittels JSON an den Webserver der vom Pi gehostet wird geschickt. Das Pi wartet darauf Daten zu bekommen, um anschlie\u00dfend das richtige PWM Signal zu senden.","title":"Kameramodul und Webserver"},{"location":"project/#abstraktionsebenen","text":"Abstraktionsebene 1 - Grobe Gesamt\u00fcbersicht Abstraktionsebene 2 - Sicht Laptop - Webserver Abstraktionsebene 2 - Sicht RaspberryPi - Motor Abstraktionsebene 3 - Neuronales Netz","title":"Abstraktionsebenen"},{"location":"termine/","text":"Termine Kick-Off am 04.04.19 um 08:45 2te Besprechung am [02.05.19 um 08:45]","title":"Termine"},{"location":"termine/#termine","text":"Kick-Off am 04.04.19 um 08:45 2te Besprechung am [02.05.19 um 08:45]","title":"Termine"}]}